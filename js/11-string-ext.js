// * ===== string-extanded (—Å—Ç—Ä–æ–∫–∞-—É–≥–ª—É–±–ª–µ–Ω–Ω—ã–π) ===== * //


const stringList = 'Sample text!'
// ! –°—Ç—Ä–æ–∫–∞ - –∫–∞–∫ –º–∞—Å—Å–∏–≤, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤

// –ü–æ–ª—É—á–∏—Ç—å —Å–∏–º–≤–æ–ª:
console.log(stringList[0]); // S
console.log(stringList[43]); // undefined

// –ü–æ —Å–∏–º–≤–æ–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ (–ª–∏–±–æ —á–µ—Ä–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ü–∏–∫–ª for)
for (const symbol of stringList) {
    console.log(symbol);
}

// ! –ó–∞–º–µ–Ω–∞ —Å–∏–º–≤–æ–ª–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞!
// stringList[0] = "T";


// * –§—É–Ω–∫—Ü–∏–∏ (–º–µ—Ç–æ–¥—ã) —Å—Ç—Ä–æ–∫ *
const text = "  stRing ";


// * 0. –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ (—Å–≤–æ–π—Å—Ç–≤–æ length)
// console.log(text.length);
// 1. let newString = <string>.toUpperCase(); // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
// console.log(text.toUpperCase());
// 2. let newString = <string>.toLowerCase(); // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
// console.log(text.toLowerCase());
// 3. let newStr = <string>.trim(); // –£–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å–ª–µ–≤–∞ –∏ —Å–ø—Ä–∞–≤–∞ –æ—Ç —Å—Ç—Ä–æ–∫–∏


// * 4. let index = <string>.indexOf("Ri", 0) // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Å—Ç—Ä–µ—á–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è "Ri", –Ω–∞—á–∏–Ω–∞—è —Å index = 0
// –ü–æ–∏—Å–∫ —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥—ë—Ç, –≤–µ—Ä–Ω—ë—Ç—Å—è -1
// console.log(text.indexOf("Ri", 0));

// ? 5. let hasIndex = <string>.includes("Ri", 0); // –í–æ–∑–≤—Ä–∞—â–µ—Ç true, –µ—Å–ª–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ –µ—Å—Ç—å, –∏–Ω–∞—á–µ - false
// –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0 —Å–∏–º–≤–æ–ª–∞
// let hasIndex = text.includes("Ri", 0);
// console.log(hasIndex);

// ? 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –Ω–∞—á–∞–ª–µ –∏–ª–∏ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏
// console.log(text.startsWith("st")); // true, "st" ‚Äî –Ω–∞—á–∞–ª–æ "stRing"
// console.log(text.endsWith("ing")); // true, "ing" ‚Äî –æ–∫–æ–Ω—á–∞–Ω–∏–µ "stRing"

// * 7. let newStr = <string>.slice(start, end); // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É, –∫–æ–ø–∏—Ä—É—è –≤ –Ω–µ—ë —ç–ª–µ–º–µ–Ω—Ç—ã —Å –ø–æ–∑–∏—Ü–∏–∏ <start> –¥–æ <end> –ù–ï –≤–∫–ª.
// slice(start) - —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –ø–æ–∑–∏—Ü–∏–∏ start –¥–æ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏


// * Array (–ú–∞—Å—Å–∏–≤—ã) * //

// * 8. let array = <string>.split('R'); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é 'R'
// console.log(text.trim().split('R')); // ['st', 'ing']
// console.log(str.split('')); // –ü–æ—Å–∏–º–≤–æ–ª—å–Ω–æ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤ –º–∞—Å—Å–∏–≤


// 9. Array.from(<string>); // –ü–æ—Å–∏–º–≤–æ–ª—å–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ (–•–æ—Ä–æ—à–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è —Å–æ—Å—Ç–∞–≤–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤)
// let str = 'ùí≥üòÇ';
// console.log(Array.from(str)); // ['ùí≥', 'üòÇ']
// console.log(str.split('')); // ['ÔøΩ', 'ÔøΩ', 'ÔøΩ', 'ÔøΩ']
// –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç str.split, —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤ —Ä–∞–±–æ—Ç–µ –æ–ø–∏—Ä–∞–µ—Ç—Å—è –Ω–∞ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ—Å—Ç—å —Å—Ç—Ä–æ–∫–∏

// * 10. let string = <array>.join("R"); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É, –¥–æ–±–∞–≤–ª—è—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å 'R'

// * 11. <array>.reverse(); // –ü–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞
// split('').reverse().join('') // –ü–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏ –±—É–∫–≤—ã

