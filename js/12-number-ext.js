// * ===== number ===== * //

// 1. Number(<any>); // Приводит к типу number

// 2. parseInt("19.5px"); // 19 -> Отбросить дробную часть, а также откинуть текст справа

// 3. parseFloat("19.5px"); // 19.5 -> Отбросить текст справа

// 4. isNaN(<any>); // Проверка на NaN (преобразует значение к типу number и проверяет является ли оно NaN)

// * Округление
// 5. .toFixed(n); // Округляет число до n знаков после запятой и возвращает СТРОКОВОЕ представление

// 6. Math.floor(<number>); // Округление в меньшую сторону
// 7. Math.ceil(<number>); // Округление в большую сторону
// 8. Math.round(<number>); // Округление до ближайшего целого (почти как в математике)


// * Другие функции в Math * //
// 9. Math.max(a, b, c, ..., z); // Возвращает наибольшее число
// 10. Math.min(a, b, c, ..., z); // Возвращает наименьшее число

// 11. Math.random(); // * Возвращает псевдослучайное число от 0 вкл до 1 НЕ вкл

// * Случайное целое число от min до max вкл
// Math.floor(min + Math.random() * (max + 1 - min));
function randomInteger(min, max) {
    // случайное число от min до (max+1)
    let step1 = Math.random(); // от [0 ; 1)
    let step2 = step1 * (max + 1 - min); // [0 ; max + 1 - min)
    let step3 = min + step2; // [min ; max + 1)
    // * let step3 = min + Math.random() * (max + 1 - min);
    return Math.floor(step3); // 2.9999999999  округлится до 2, т.к. округление в меньшую сторону
}
console.log(randomInteger(1, 5)); // [1, 5.99999] с округлением в меньшую сторону


console.log(randomInteger(1, 5));
console.log(randomInteger(1, 5));
console.log(randomInteger(1, 5));
console.log(randomInteger(1, 5));


// * Унарный опаретор
// * Бинарный оператор
// * Тернарный оператор



// * ===== Дополненительный материал (необязательный) ===== * //
// * ===== Неточные вычисления ===== * //
// ! Ошибка в точности вычислений для чисел с плавающей точкой сохраняется в любом другом языке, где используется формат IEEE 754, 
// включая PHP, Java, C, Perl, Ruby.

console.log(0.1 + 0.2 === 0.3); // ! false 
// ! Дробные числа в 10 системе - бесконечная дробь в двоичной системе (1 / 3  0.3333)

console.log(0.1 + 0.2); // 0.30000000000000004
console.log(0.1.toFixed(3)); // 0.100 - исправили ситуацию

// ! Но toFixed() не является полным решением, т.к. округляет не математически
// console.log(6.35.toFixed(20)); // Округлил в меньшую сторону
// console.log(1.35.toFixed(20)); // Округлил в большую сторону
console.log(6.35.toFixed(1)); // !6.3, а не 6.4

// * Верное округление *//
let n = 2; // До какого знака округление 
console.log(Math.round(6.35 * 10 ** n) / 10 ** n); // 6.35 -> 63.5 -> 64(rounded) -> 6.4



// * ===== Перевод в другую СС ===== * //
// * <number>.toString(base); // возвращает строковое представление числа <number> в системе счисления base.
// * parseInt('0xfff', 16); // Переводит число '0xfff' из 16 сс в 10 сс

// num = 255;
// console.log(num.toString(16));  // ff
// console.log(num.toString(2));   // 11111111

// num.toString(16) - возвращает строковое представление числа num в системе счисления
// От 2 до 36 (10 - по умолчанию)

// console.log((1234567).toString(36)); // () - если хотим использоваь сразу на чисел
// console.log(1234567..toString(36)); // .. - если хотим использоваь сразу на чисел


// * ===== Обратный перевод в 10 СС ===== * //
// parseInt('число в другой СС', <CC>)

// console.log(parseInt('0xfff', 16)); // 4095 - Переводит из 16 в 10 СС
// console.log(parseInt('ff', 16)); // 255, без 0x тоже работает
// console.log(parseInt('qglj', 36)); // 1234567
